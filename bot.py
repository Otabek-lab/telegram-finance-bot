import os
import logging
import asyncio
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from io import BytesIO
from datetime import datetime
from deep_translator import GoogleTranslator
from sklearn.linear_model import LinearRegression

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ Railway (–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è)
TOKEN = "7160148421:AAFutJR4gqFwkfokRm7JKfhXqVqM4zL9120"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
transactions = []
translator = GoogleTranslator(source="auto", target="ru")

# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ Telegram API
async def start():
    print("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç. –ó–∞–ø–∏—Å—ã–≤–∞–π –¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã, –∞ —è —Å–¥–µ–ª–∞—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç! (–ó–∞–≥–ª—É—à–∫–∞ –±–µ–∑ Telegram API)")
    await start()

if __name__ == "__main__":
    try:
        loop = asyncio.get_running_loop()
    except RuntimeError:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
    
    loop.run_until_complete(main())
